const UserRegisterController = (app, db) => {
  app.post("/register/user", async (req, res) => {
    const {
      userFullName,
      userEmail,
      userUserName,
      userPassword,
      userConfirmPassword,
    } = req.body;
    console.log('userFullName')
    const insertUserDetailsQuery =
      "INSERT INTO user_details (userFullName, userEmail, userUserName, userPassword, userConfirmPassword) VALUES (?, ?, ?, ?, ?)";

    const insertUserLoginQuery =
      "INSERT INTO user_login (user_id, userUserName, userPassword) VALUES (?, ?, ?)";

    try {
      // Start a transaction
      await db.beginTransaction();

      // Execute the first SQL query to insert user details
      const userDetailsResult = await db.query(
        insertUserDetailsQuery,
        [userFullName, userEmail, userUserName, userPassword, userConfirmPassword]
      );

      // Retrieve the user ID generated by the database
      const userId = userDetailsResult.insertId;

      // Execute the second SQL query to insert user login details
      await db.query(
        insertUserLoginQuery,
        [userId, userUserName, userPassword]
      );

      // Commit the transaction
      await db.commit();

      // Registration successful
      console.log("------------USER REGISTRATION SUCCESSFUL-----");
      res.status(201).json({ success: true, message: "User Registration Successful!" });
    } catch (err) {
      // Handle errors and roll back the transaction
      console.error('Error during registration:', err);

      if (err.code === "ER_DUP_ENTRY") {
        // Send response indicating duplicate username
        res.status(400).json({ success: false, message: "Username already exists" });
      } else {
        // Send internal server error response
        res.status(500).json({ success: false, error: "Internal Server Error" });
      }

      await db.rollback();
    }
  });
};

module.exports = UserRegisterController;
